
plugins {
    id 'idea'
    id 'java'
    id 'maven-publish'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.snyk.gradle.plugin.snykplugin" version "0.4"
    id "com.diffplug.spotless" version "6.9.0" apply false
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "org.sonarqube" version "3.2.0"
    id 'tenx.alerts' version '0.1.8'
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    version = '1.0.0'

    group = 'com.godel-kafka-course'

    repositories {
        mavenLocal()
        maven { url "https://nexus.internal.10x.mylti3gh7p4x.net/repository/maven-snapshots/"}
        maven { url "https://nexus.internal.10x.mylti3gh7p4x.net/repository/maven-public/"}
        maven { url "https://nexus.internal.10x.mylti3gh7p4x.net/repository/maven-releases/"}
        maven { url "https://nexus.internal.10x.mylti3gh7p4x.net/repository/third-party/" }
        maven { url 'https://nexus.internal.10x.mylti3gh7p4x.net/repository/jcenter/' }
    }
    dependencyManagement {
        imports {
            mavenBom('org.springframework.boot:spring-boot-dependencies:2.7.10')
            mavenBom('org.springframework.cloud:spring-cloud-dependencies:2021.0.3')
            mavenBom('org.junit:junit-bom:5.8.1')
            mavenBom('io.cucumber:cucumber-bom:7.5.0')
        }
        dependencies {
            dependency "com.tenx.logging:standard-logging-spring-starter:1.1.24"
            dependency "org.postgresql:postgresql:42.4.1"
            dependency "com.tenx.data:hikari-iam-datasource:0.1.4"
            dependency "com.vladmihalcea:hibernate-types-52:2.19.0"
            dependency "com.tenx:10x-nr-custom-metrics:0.1.7"
            dependency "io.confluent:kafka-avro-serializer:7.2.1"
            dependency "org.springframework.kafka:spring-kafka:2.9.2"
            dependency "org.springframework.kafka:spring-kafka-test:2.9.2"
            dependency "org.apache.avro:avro:1.11.0"
            dependency "com.tenx.kafka:10x-kafka-security:1.1.3"
            dependency "com.tenx:logical-types:0.6-SNAPSHOT"
            dependency 'com.tenx.customerneeds:shared-outbox:9.2.3'
            dependency 'com.tenx.customerneeds:shared-kafka-interceptor:1.0.5'
            dependency "com.tenx.lib:lib-health-probes:0.1.12"
            dependency "com.tenxbanking:dead-letter-processor:0.6.1"
            dependency "org.projectlombok:lombok:1.18.24"
            dependency "org.yaml:snakeyaml:1.31"
            dependency 'com.tenx.http.error.response:10x-http-error-response:2.0.0'
            dependency 'org.springdoc:springdoc-openapi-ui:1.6.11'
            dependency 'org.springdoc:springdoc-openapi-data-rest:1.2.34'
            dependency 'com.tenx:standard-idempotency:1.1.0'
            dependency 'com.auth0:java-jwt:3.8.1'
            dependency 'com.tenx.customerneeds:shared-jwt:3.0.9'
            dependency 'com.squareup.okhttp3:okhttp:4.10.0'
            dependency 'com.tenx:10x-tracing:0.4.15'
            dependency 'com.newrelic.agent.java:newrelic-api:7.10.0'
            dependency 'com.jayway.jsonpath:json-path:2.4.0'

            // snyk override dependencies, review and remove when update string boot bom
            dependency 'org.apache.tomcat.embed:tomcat-embed-core:9.0.69'
            dependency 'commons-fileupload:commons-fileupload:1.5'

            // test dependencies
            dependency "org.mockito:mockito-junit-jupiter:4.11.0"
            dependency "org.mockito:mockito-core:4.11.0"
            dependency "io.zonky.test:embedded-postgres:2.0.1"
            dependency "io.zonky.test:embedded-database-spring-test:2.1.2"
            dependency 'org.mapstruct:mapstruct:1.5.2.Final'
            dependency 'org.mapstruct:mapstruct-processor:1.5.2.Final'
            dependency "org.assertj:assertj-core:3.23.1"
            dependency "org.awaitility:awaitility:4.0.2"
            dependency "com.github.tomakehurst:wiremock:2.27.2"

        }
    }
}

subprojects {
    apply plugin: 'java'

    apply plugin: 'com.gorylenko.gradle-git-properties'


    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()

    }



    task allDeps(type: DependencyReportTask) {}



}

